name: Deploy to DEV

on:
  push:
    branches:
      - 'develop'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Bun and add to PATH
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      # Step 3: Cache Bun Dependencies
      - name: Cache Bun Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # Step 4: Install dependencies and build
      - name: Install dependencies
        run: bun install --frozen-lockfile --verbose

      - name: Build the project
        run: bun run build:dev

      # Step 5: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_DEV_SERVICE_ACCOUNT_KEY }}'
          project_id: '${{ secrets.GCP_PROJECT_ID }}'  # Add this line
          create_credentials_file: true                # Add this line

      # Step 6: Setup Cloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Step 7: Deploy to Cloud Storage DEV Bucket
      - name: Deploy to Cloud Storage DEV Bucket
        run: |
          gcloud storage rsync -r ./dist gs://${{ secrets.GCP_DEV_BUCKET_NAME }}

      # Step 8: Make bucket public and configure website
      - name: Make bucket public and configure website
        run: |
          gsutil iam ch allUsers:objectViewer gs://${{ secrets.GCP_DEV_BUCKET_NAME }}
          gsutil web set -m index.html gs://${{ secrets.GCP_DEV_BUCKET_NAME }}

      # Step 9: Set CORS configuration
      - name: Set CORS configuration
        run: |
          echo '[{"origin":["*"],"method":["GET","HEAD","OPTIONS"],"responseHeader":["Content-Type"],"maxAgeSeconds":3600}]' > cors.json
          gsutil cors set cors.json gs://${{ secrets.GCP_DEV_BUCKET_NAME }}
          rm cors.json

      # Step 10: Enable uniform bucket-level access
      - name: Enable uniform bucket-level access
        run: |
          gsutil uniformbucketlevelaccess set on gs://${{ secrets.GCP_DEV_BUCKET_NAME }}
